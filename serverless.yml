service:
  name: telegram-bot

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  # - serverless-plugin-typescript

custom:
  bucket: telegram-bot-development

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}
    DEBUG: "*"
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    BUCKET: ${self:custom.bucket}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
functions:
  receive-updates:
    handler: handler.handler
    events:
      - http:
          method: post
          path: telegram-hook
          cors: true

resources:
  Resources:
    PetsTable:
      Type: AWS::DynamoDB::Table
      # DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
